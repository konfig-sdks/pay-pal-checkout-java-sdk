/*
 * Orders
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CheckoutPaymentIntent;
import com.konfigthis.client.model.OrderApplicationContext;
import com.konfigthis.client.model.Payer;
import com.konfigthis.client.model.PaymentSource;
import com.konfigthis.client.model.PurchaseUnitRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for OrderRequest
 */
public class OrderRequestTest {
    private final OrderRequest model = new OrderRequest();

    /**
     * Model tests for OrderRequest
     */
    @Test
    public void testOrderRequest() {
        // TODO: test OrderRequest
    }

    /**
     * Test the property 'intent'
     */
    @Test
    public void intentTest() {
        // TODO: test intent
    }

    /**
     * Test the property 'payer'
     */
    @Test
    public void payerTest() {
        // TODO: test payer
    }

    /**
     * Test the property 'purchaseUnits'
     */
    @Test
    public void purchaseUnitsTest() {
        // TODO: test purchaseUnits
    }

    /**
     * Test the property 'paymentSource'
     */
    @Test
    public void paymentSourceTest() {
        // TODO: test paymentSource
    }

    /**
     * Test the property 'applicationContext'
     */
    @Test
    public void applicationContextTest() {
        // TODO: test applicationContext
    }

}
