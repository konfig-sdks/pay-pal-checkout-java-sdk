/*
 * Orders
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ApplePayRequest;
import com.konfigthis.client.model.BancontactRequest;
import com.konfigthis.client.model.BlikRequest;
import com.konfigthis.client.model.CardRequest;
import com.konfigthis.client.model.EpsRequest;
import com.konfigthis.client.model.GiropayRequest;
import com.konfigthis.client.model.IdealRequest;
import com.konfigthis.client.model.MybankRequest;
import com.konfigthis.client.model.P24Request;
import com.konfigthis.client.model.PaypalWallet;
import com.konfigthis.client.model.SofortRequest;
import com.konfigthis.client.model.Token;
import com.konfigthis.client.model.TrustlyRequest;
import com.konfigthis.client.model.VenmoWalletRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PaymentSource
 */
public class PaymentSourceTest {
    private final PaymentSource model = new PaymentSource();

    /**
     * Model tests for PaymentSource
     */
    @Test
    public void testPaymentSource() {
        // TODO: test PaymentSource
    }

    /**
     * Test the property 'card'
     */
    @Test
    public void cardTest() {
        // TODO: test card
    }

    /**
     * Test the property 'token'
     */
    @Test
    public void tokenTest() {
        // TODO: test token
    }

    /**
     * Test the property 'paypal'
     */
    @Test
    public void paypalTest() {
        // TODO: test paypal
    }

    /**
     * Test the property 'bancontact'
     */
    @Test
    public void bancontactTest() {
        // TODO: test bancontact
    }

    /**
     * Test the property 'blik'
     */
    @Test
    public void blikTest() {
        // TODO: test blik
    }

    /**
     * Test the property 'eps'
     */
    @Test
    public void epsTest() {
        // TODO: test eps
    }

    /**
     * Test the property 'giropay'
     */
    @Test
    public void giropayTest() {
        // TODO: test giropay
    }

    /**
     * Test the property 'ideal'
     */
    @Test
    public void idealTest() {
        // TODO: test ideal
    }

    /**
     * Test the property 'mybank'
     */
    @Test
    public void mybankTest() {
        // TODO: test mybank
    }

    /**
     * Test the property 'p24'
     */
    @Test
    public void p24Test() {
        // TODO: test p24
    }

    /**
     * Test the property 'sofort'
     */
    @Test
    public void sofortTest() {
        // TODO: test sofort
    }

    /**
     * Test the property 'trustly'
     */
    @Test
    public void trustlyTest() {
        // TODO: test trustly
    }

    /**
     * Test the property 'applePay'
     */
    @Test
    public void applePayTest() {
        // TODO: test applePay
    }

    /**
     * Test the property 'googlePay'
     */
    @Test
    public void googlePayTest() {
        // TODO: test googlePay
    }

    /**
     * Test the property 'venmo'
     */
    @Test
    public void venmoTest() {
        // TODO: test venmo
    }

}
